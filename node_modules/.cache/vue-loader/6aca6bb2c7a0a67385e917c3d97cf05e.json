{"remainingRequest":"/Users/gustavoeinstein/Documents/todo/todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gustavoeinstein/Documents/todo/todo/src/components/Todo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gustavoeinstein/Documents/todo/todo/src/components/Todo.vue","mtime":1623862278217},{"path":"/Users/gustavoeinstein/Documents/todo/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gustavoeinstein/Documents/todo/todo/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/gustavoeinstein/Documents/todo/todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/gustavoeinstein/Documents/todo/todo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNFZGl0aW5nOiBmYWxzZSwKICAgICAgbmV3VG9kb0Rlc2NyaXB0aW9uOiAiIgogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBkZXNjcmlwdGlvbjogU3RyaW5nLAogICAgY29tcGxldGVkOiBCb29sZWFuCiAgfSwKICBtZXRob2RzOiB7CiAgICBzdGFydEVkaXRpbmcoKSB7CiAgICAgIGlmICh0aGlzLmlzRWRpdGluZykgewogICAgICAgIHRoaXMuZmluaXNoRWRpdGluZygpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMubmV3VG9kb0Rlc2NyaXB0aW9uID0gdGhpcy5kZXNjcmlwdGlvbjsKICAgICAgICB0aGlzLmlzRWRpdGluZyA9IHRydWU7CiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gdGhpcy4kcmVmcy5uZXdUb2RvLmZvY3VzKCkpOwogICAgICB9CiAgICB9LAogICAgZmluaXNoRWRpdGluZygpIHsKICAgICAgdGhpcy5pc0VkaXRpbmcgPSBmYWxzZTsKICAgICAgdGhpcy4kZW1pdCgib24tZWRpdCIsIHRoaXMubmV3VG9kb0Rlc2NyaXB0aW9uKTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["Todo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Todo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <li class=\"d-flex align-items-center list-group-item\">\n    <button\n      class=\"btn border-0 flex-grow-1 text-left shadow-none\"\n      :class=\"{ completed }\"\n      @click=\"$emit('on-toggle')\"\n      v-if=\"!isEditing\"\n    >\n      <span>{{ description }}</span>\n    </button>\n    <form v-else class=\"flex-grow-1\" @submit.prevent=\"finishEditing()\">\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        v-model=\"newTodoDescription\"\n        @blur=\"finishEditing()\"\n        ref=\"newTodo\"\n      />\n    </form>\n    <button\n      @click=\"startEditing()\"\n      class=\"btn btn-outline-primary border-0 ml-2\"\n    >\n      <span class=\"fa fa-edit\"></span>\n    </button>\n    <button @click=\"$emit('on-delete')\" class=\"btn btn-outline-danger border-0\">\n      <span class=\"fa fa-trash\"></span>\n    </button>\n  </li>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      isEditing: false,\n      newTodoDescription: \"\"\n    };\n  },\n  props: {\n    description: String,\n    completed: Boolean\n  },\n  methods: {\n    startEditing() {\n      if (this.isEditing) {\n        this.finishEditing();\n      } else {\n        this.newTodoDescription = this.description;\n        this.isEditing = true;\n        this.$nextTick(() => this.$refs.newTodo.focus());\n      }\n    },\n    finishEditing() {\n      this.isEditing = false;\n      this.$emit(\"on-edit\", this.newTodoDescription);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.completed {\n  text-decoration: line-through;\n}\n</style>"]}]}
{"remainingRequest":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/src/components/gallery.vue?vue&type=template&id=9b4fef1c&","dependencies":[{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/src/components/gallery.vue","mtime":1629310606068},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/cache-loader/dist/cjs.js","mtime":1623779648463},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1623779657212},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/cache-loader/dist/cjs.js","mtime":1623779648463},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/vue-loader/lib/index.js","mtime":1623779657212}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
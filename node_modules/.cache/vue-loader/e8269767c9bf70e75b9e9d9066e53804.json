{"remainingRequest":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/src/components/uploadBox.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/src/components/uploadBox.vue","mtime":1630690744693},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/css-loader/dist/cjs.js","mtime":1623779657318},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1623779657212},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/postcss-loader/src/index.js","mtime":1623779657114},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/cache-loader/dist/cjs.js","mtime":1623779648463},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/vue-loader/lib/index.js","mtime":1623779657212}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNib3ggewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IDA7CiAgcmlnaHQ6IDA7CiAgbWFyZ2luLXJpZ2h0OiAxJTsKICBtYXJnaW4tYm90dG9tOiAxJTsKfQojcHJvZ3Jlc3MgewogIHJpZ2h0OiAwOwp9Cg=="},{"version":3,"sources":["uploadBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"uploadBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"box\">\n    <v-card width=\"500\">\n      <v-toolbar color=\"indigo\" dark>\n        <v-toolbar-title>Uploads</v-toolbar-title>\n        <v-spacer> </v-spacer>\n        <v-icon color=\"black\" @click=\"boxToogle()\">\n          mdi-close\n        </v-icon>\n      </v-toolbar>\n      <v-spacer></v-spacer>\n\n      <v-list-item-group\n        v-for=\"(video, i) in $store.getters.getvideoName\"\n        :key=\"i\"\n      >\n        <v-list-item>\n          <v-card-text\n            class=\"mx-auto text-center\"\n            v-if=\"video.videoName\"\n            :key=\"'j' + i\"\n            v-text=\"video.videoName\"\n          >\n          </v-card-text>\n\n          <div id=\"progress\">\n            <v-container v-if=\"video.videoStatus == 'uploading'\">\n              <v-progress-circular\n                indeterminate\n                color=\"primary\"\n              ></v-progress-circular>\n            </v-container>\n            <v-icon v-if=\"video.videoStatus == 'ready'\" color=\"green\" large>\n              mdi-check-bold\n            </v-icon>\n            <v-icon v-if=\"video.videoStatus == 'failed'\" color=\"red\" large>\n              mdi-close\n            </v-icon>\n          </div>\n        </v-list-item>\n        <v-divider> </v-divider>\n      </v-list-item-group>\n    </v-card>\n    <v-snackbar v-model=\"snackbar\" color=\"green accent-3\" rounded=\"pill\">\n      Seu video está pronto, você já pode vê-lo na galeria\n\n      <template v-slot:action=\"{ attrs }\">\n        <v-btn color=\"red\" text v-bind=\"attrs\" @click=\"snackbar = false\">\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n    <v-snackbar v-model=\"snackbar2\" rounded=\"pill\" color=\"red darken-3\">\n      Houve um erro no upload do seu Vídeo, tente novamente.\n\n      <template v-slot:action=\"{ attrs }\">\n        <v-btn color=\"red\" text v-bind=\"attrs\" @click=\"snackbar2 = false\">\n          Close\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      ready: false,\n      verification: null,\n      snackbar: false,\n      snackbar2: false,\n    }\n  },\n  methods: {\n    boxToogle() {\n      this.$store.dispatch(\"fetchuploadBoxContoller\", false)\n      this.$store.dispatch(\"clearVideo\")\n    },\n    checkStatus() {\n      let videoLength = this.$store.getters.getvideoName.length\n      let ready = 0\n\n      this.$store.getters.getvideoName.forEach((video, index) => {\n        // console.log(\"video\", video)\n        if (video.videoStatus == \"uploading\") {\n          fetch(\"http://localhost:2006/video-vimeo-status\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              videoname: video.videoName,\n            }),\n          })\n            .then((response) => {\n              return response.json()\n            })\n            .then((res) => {\n              console.log(\"Response:\", res)\n              if (res.message == \"Video está pronto!\") {\n                let vid = {\n                  index: index,\n                  videoStatus: \"ready\",\n                }\n                this.snackbar = true\n                ready = ready + 1\n                this.$store.dispatch(\"fetchVideoStatus\", vid)\n              } else if (res.message == \"Upload do video Falhou!\") {\n                let vid = {\n                  index: index,\n                  videoStatus: \"failed\",\n                }\n                ready = ready + 1\n                this.snackbar2 = true\n                this.$store.dispatch(\"fetchVideoStatus\", vid)\n              }\n              if (ready == videoLength) {\n                this.ready = true\n              }\n            })\n            .catch((error) => {\n              console.log(error)\n            })\n        }\n        if (index + 1 == videoLength) {\n          clearInterval(this.verification)\n          this.verificationOfStatus()\n        }\n      })\n    },\n\n    verificationOfStatus() {\n      this.verification = setInterval(() => {\n        if (this.ready == true) {\n          // clearInterval(verification)\n          console.log(this.verification)\n          this.ready = false\n        } else {\n          this.checkStatus()\n        }\n      }, 10000)\n    },\n  },\n\n  mounted() {\n    this.verificationOfStatus()\n    console.log(this.$store.getters.getvideoName)\n  },\n\n  destroyed() {\n    clearInterval(this.verification)\n  },\n}\n</script>\n\n<style>\n#box {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  margin-right: 1%;\n  margin-bottom: 1%;\n}\n#progress {\n  right: 0;\n}\n</style>\n"]}]}
{"remainingRequest":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/src/components/uploadBox.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/src/components/uploadBox.vue","mtime":1630087678595},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/css-loader/dist/cjs.js","mtime":1623779657318},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1623779657212},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/postcss-loader/src/index.js","mtime":1623779657114},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/cache-loader/dist/cjs.js","mtime":1623779648463},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/vue-loader/lib/index.js","mtime":1623779657212}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2JveCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJvdHRvbTogMDsKICByaWdodDogMDsKfQojcHJvZ3Jlc3MgewogIHJpZ2h0OiAwOwp9Cg=="},{"version":3,"sources":["uploadBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"uploadBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"box\">\n    <v-card width=\"500\">\n      <v-toolbar color=\"indigo\" dark>\n        <v-toolbar-title>Uploads</v-toolbar-title>\n        <v-spacer> </v-spacer>\n        <v-icon color=\"black\" @click=\"boxToogle()\">\n          mdi-close\n        </v-icon>\n      </v-toolbar>\n      <v-spacer></v-spacer>\n\n      <v-list-item-group\n        v-for=\"(video, i) in $store.getters.getvideoName\"\n        :key=\"i\"\n      >\n        <v-list-item>\n          <v-card-text\n            class=\"mx-auto text-center\"\n            v-if=\"video.videoName\"\n            :key=\"'j' + i\"\n            v-text=\"video.videoName\"\n          >\n          </v-card-text>\n\n          <div id=\"progress\">\n            <v-container v-if=\"video.videoStatus == 'uploading'\">\n              <v-progress-circular\n                indeterminate\n                color=\"primary\"\n              ></v-progress-circular>\n            </v-container>\n            <v-icon v-if=\"video.videoStatus == 'ready'\" color=\"green\" large>\n              mdi-check-bold\n            </v-icon>\n          </div>\n        </v-list-item>\n        <v-divider> </v-divider>\n      </v-list-item-group>\n    </v-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      ready: false,\n    }\n  },\n  methods: {\n    boxToogle() {\n      this.$store.dispatch(\"fetchuploadBoxContoller\", false)\n    },\n    checkStatus() {\n      this.$store.getters.getvideoName.forEach((video, index) => {\n        if (video.videoStatus == \"uploading\") {\n          fetch(\"http://localhost:2006/video-vimeo-status\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              videoname: video.videoName,\n            }),\n          })\n            .then((response) => {\n              return response.json()\n            })\n            .then((res) => {\n              console.log(\"Response:\", res)\n              if (res.message == \"Video estÃ¡ pronto!\") {\n                let vid = {\n                  index: index,\n                  videoStatus: \"ready\",\n                }\n                this.$store.dispatch(\"fetchVideoStatus\", vid)\n              } else if (res.message == \"Upload do video Falhou!\") {\n                let vid = {\n                  index: index,\n                  videoStatus: \"failed\",\n                }\n                this.$store.dispatch(\"fetchVideoStatus\", vid)\n              }\n            })\n            .catch((error) => {\n              console.log(error)\n            })\n        }\n      })\n    },\n    callCheckStatus() {\n      let verificationOfStatus = setInterval(() => {\n        if (this.ready == false) {\n          // console.log(\"Loop verification Transcode number: \", countLoop)\n          this.checkStatus()\n        } else clearInterval(verificationOfStatus)\n      }, 10000)\n    },\n  },\n  mounted() {\n    this.callCheckStatus()\n    console.log(this.$store.getters.getvideoName)\n  },\n}\n</script>\n\n<style>\n#box {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n}\n#progress {\n  right: 0;\n}\n</style>\n"]}]}
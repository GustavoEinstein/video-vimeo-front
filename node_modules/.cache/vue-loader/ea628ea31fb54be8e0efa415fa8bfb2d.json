{"remainingRequest":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/src/components/uploadBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/src/components/uploadBox.vue","mtime":1630516971026},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/cache-loader/dist/cjs.js","mtime":1623779648463},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/babel-loader/lib/index.js","mtime":1623779648459},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/cache-loader/dist/cjs.js","mtime":1623779648463},{"path":"/Users/gustavoeinstein/Sites/bull-vimeo/bull-vimeo-front/node_modules/vue-loader/lib/index.js","mtime":1623779657212}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVhZHk6IGZhbHNlLAogICAgICB2ZXJpZmljYXRpb246IG51bGwsCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBib3hUb29nbGUoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJmZXRjaHVwbG9hZEJveENvbnRvbGxlciIsIGZhbHNlKQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiY2xlYXJWaWRlbyIpCiAgICB9LAogICAgY2hlY2tTdGF0dXMoKSB7CiAgICAgIGxldCB2aWRlb0xlbmd0aCA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0dmlkZW9OYW1lLmxlbmd0aAogICAgICBsZXQgcmVhZHkgPSAwCgogICAgICB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldHZpZGVvTmFtZS5mb3JFYWNoKCh2aWRlbywgaW5kZXgpID0+IHsKICAgICAgICBjb25zb2xlLmxvZygidmlkZW8iLCB2aWRlbykKICAgICAgICBpZiAodmlkZW8udmlkZW9TdGF0dXMgPT0gInVwbG9hZGluZyIpIHsKICAgICAgICAgIGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjIwMDYvdmlkZW8tdmltZW8tc3RhdHVzIiwgewogICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgICAgICB2aWRlb25hbWU6IHZpZGVvLnZpZGVvTmFtZSwKICAgICAgICAgICAgfSksCiAgICAgICAgICB9KQogICAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiUmVzcG9uc2U6IiwgcmVzKQogICAgICAgICAgICAgIGlmIChyZXMubWVzc2FnZSA9PSAiVmlkZW8gZXN0w6EgcHJvbnRvISIpIHsKICAgICAgICAgICAgICAgIGxldCB2aWQgPSB7CiAgICAgICAgICAgICAgICAgIGluZGV4OiBpbmRleCwKICAgICAgICAgICAgICAgICAgdmlkZW9TdGF0dXM6ICJyZWFkeSIsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZWFkeSA9IHJlYWR5ICsgMQogICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goImZldGNoVmlkZW9TdGF0dXMiLCB2aWQpCiAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZXMubWVzc2FnZSA9PSAiVXBsb2FkIGRvIHZpZGVvIEZhbGhvdSEiKSB7CiAgICAgICAgICAgICAgICBsZXQgdmlkID0gewogICAgICAgICAgICAgICAgICBpbmRleDogaW5kZXgsCiAgICAgICAgICAgICAgICAgIHZpZGVvU3RhdHVzOiAiZmFpbGVkIiwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJlYWR5ID0gcmVhZHkgKyAxCiAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiZmV0Y2hWaWRlb1N0YXR1cyIsIHZpZCkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgaWYgKHJlYWR5ID09IHZpZGVvTGVuZ3RoKSB7CiAgICAgICAgICAgICAgICB0aGlzLnJlYWR5ID0gdHJ1ZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKQogICAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgICBpZiAoaW5kZXggKyAxID09IHZpZGVvTGVuZ3RoKSB7CiAgICAgICAgICBjbGVhckludGVydmFsKHRoaXMudmVyaWZpY2F0aW9uKQogICAgICAgICAgdGhpcy52ZXJpZmljYXRpb25PZlN0YXR1cygpCiAgICAgICAgfQogICAgICB9KQogICAgfSwKCiAgICB2ZXJpZmljYXRpb25PZlN0YXR1cygpIHsKICAgICAgdGhpcy52ZXJpZmljYXRpb24gPSBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgaWYgKHRoaXMucmVhZHkgPT0gdHJ1ZSkgewogICAgICAgICAgLy8gY2xlYXJJbnRlcnZhbCh2ZXJpZmljYXRpb24pCiAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnZlcmlmaWNhdGlvbikKICAgICAgICAgIHRoaXMucmVhZHkgPSBmYWxzZQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmNoZWNrU3RhdHVzKCkKICAgICAgICB9CiAgICAgIH0sIDEwMDAwKQogICAgfSwKICB9LAoKICBtb3VudGVkKCkgewogICAgdGhpcy52ZXJpZmljYXRpb25PZlN0YXR1cygpCiAgICBjb25zb2xlLmxvZyh0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldHZpZGVvTmFtZSkKICB9LAoKICBkZXN0cm95ZWQoKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMudmVyaWZpY2F0aW9uKQogIH0sCn0K"},{"version":3,"sources":["uploadBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"uploadBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"box\">\n    <v-card width=\"500\">\n      <v-toolbar color=\"indigo\" dark>\n        <v-toolbar-title>Uploads</v-toolbar-title>\n        <v-spacer> </v-spacer>\n        <v-icon color=\"black\" @click=\"boxToogle()\">\n          mdi-close\n        </v-icon>\n      </v-toolbar>\n      <v-spacer></v-spacer>\n\n      <v-list-item-group\n        v-for=\"(video, i) in $store.getters.getvideoName\"\n        :key=\"i\"\n      >\n        <v-list-item>\n          <v-card-text\n            class=\"mx-auto text-center\"\n            v-if=\"video.videoName\"\n            :key=\"'j' + i\"\n            v-text=\"video.videoName\"\n          >\n          </v-card-text>\n\n          <div id=\"progress\">\n            <v-container v-if=\"video.videoStatus == 'uploading'\">\n              <v-progress-circular\n                indeterminate\n                color=\"primary\"\n              ></v-progress-circular>\n            </v-container>\n            <v-icon v-if=\"video.videoStatus == 'ready'\" color=\"green\" large>\n              mdi-check-bold\n            </v-icon>\n            <v-icon v-if=\"video.videoStatus == 'failed'\" color=\"red\" large>\n              mdi-close-bold\n            </v-icon>\n          </div>\n        </v-list-item>\n        <v-divider> </v-divider>\n      </v-list-item-group>\n    </v-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      ready: false,\n      verification: null,\n    }\n  },\n  methods: {\n    boxToogle() {\n      this.$store.dispatch(\"fetchuploadBoxContoller\", false)\n      this.$store.dispatch(\"clearVideo\")\n    },\n    checkStatus() {\n      let videoLength = this.$store.getters.getvideoName.length\n      let ready = 0\n\n      this.$store.getters.getvideoName.forEach((video, index) => {\n        console.log(\"video\", video)\n        if (video.videoStatus == \"uploading\") {\n          fetch(\"http://localhost:2006/video-vimeo-status\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              videoname: video.videoName,\n            }),\n          })\n            .then((response) => {\n              return response.json()\n            })\n            .then((res) => {\n              console.log(\"Response:\", res)\n              if (res.message == \"Video estÃ¡ pronto!\") {\n                let vid = {\n                  index: index,\n                  videoStatus: \"ready\",\n                }\n                ready = ready + 1\n                this.$store.dispatch(\"fetchVideoStatus\", vid)\n              } else if (res.message == \"Upload do video Falhou!\") {\n                let vid = {\n                  index: index,\n                  videoStatus: \"failed\",\n                }\n                ready = ready + 1\n                this.$store.dispatch(\"fetchVideoStatus\", vid)\n              }\n              if (ready == videoLength) {\n                this.ready = true\n              }\n            })\n            .catch((error) => {\n              console.log(error)\n            })\n        }\n        if (index + 1 == videoLength) {\n          clearInterval(this.verification)\n          this.verificationOfStatus()\n        }\n      })\n    },\n\n    verificationOfStatus() {\n      this.verification = setInterval(() => {\n        if (this.ready == true) {\n          // clearInterval(verification)\n          console.log(this.verification)\n          this.ready = false\n        } else {\n          this.checkStatus()\n        }\n      }, 10000)\n    },\n  },\n\n  mounted() {\n    this.verificationOfStatus()\n    console.log(this.$store.getters.getvideoName)\n  },\n\n  destroyed() {\n    clearInterval(this.verification)\n  },\n}\n</script>\n\n<style>\n#box {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n}\n#progress {\n  right: 0;\n}\n</style>\n"]}]}